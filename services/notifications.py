import threading
import time
from datetime import datetime

from models import *
from services.database import DataBase


def check_events_updates(bot):
    db = DataBase()
    last_check = datetime.now()

    while True:
        workshop_request: Request = db.get_workshops()

        if workshop_request.status != Status.OK:
            continue

        # –ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–∞—á–∞—Ç—ã—Ö –≤–æ—Ä–∫—à–æ–ø–∞—Ö
        for workshop in workshop_request.value:
            if workshop.start >= last_check:
                notify_user(bot, workshop)
                db.set_workshop_notify(workshop.id, True)

        time.sleep(60)
        last_check = datetime.now()


def notify_user(bot, workshop: Workshop):
    users = workshop.registered_user_ids
    for user_id in users:
        try:
            bot.send_message(user_id,
                             f"üéâ –ù–∞—á–∞–ª–æ—Å—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ: {workshop.title}\n"
                             f"üìç –ú–µ—Å—Ç–æ: {workshop.location}")
        except Exception:
            continue


def start_notification_service(bot):
    """–ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    thread = threading.Thread(name="thead_notification_service", target=check_events_updates, args=(bot,))
    thread.daemon = True
    thread.start()
